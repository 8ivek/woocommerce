name: Smoke test release
on:
    workflow_dispatch:
       inputs:
           release_id:
               description: 'WooCommerce Release Id'
               required: true

env:
    API_ARTIFACT: api-release--run-${{ github.run_number }}
    E2E_ARTIFACT: e2e-release--run-${{ github.run_number }}
    K6_ARTIFACT:  k6-release--run-${{ github.run_number }}
    FORCE_COLOR: 1
    BRANCH_NAME: ${{ github.ref_name }}

concurrency:
    group: ${{ github.workflow }}-${{ github.ref }}
    cancel-in-progress: true

jobs:
    E2E-on-trunk:
        name: E2E tests on trunk
        runs-on: ubuntu-20.04
        env:
            BASE_URL: ${{ secrets.SMOKE_TEST_URL }}
            ADMIN_USER: ${{ secrets.SMOKE_TEST_ADMIN_USER }}
            ADMIN_PASSWORD: ${{ secrets.SMOKE_TEST_ADMIN_PASSWORD }}
            ADMIN_USER_EMAIL: ${{ secrets.SMOKE_TEST_ADMIN_USER_EMAIL }}
            ALLURE_REPORT_DIR: ${{ github.workspace }}/plugins/woocommerce/tests/e2e-pw/test-results/allure-report
            ALLURE_RESULTS_DIR: ${{ github.workspace }}/plugins/woocommerce/tests/e2e-pw/test-results/allure-results
            CUSTOMER_USER: ${{ secrets.SMOKE_TEST_CUSTOMER_USER }}
            CUSTOMER_PASSWORD: ${{ secrets.SMOKE_TEST_CUSTOMER_PASSWORD }}
            DEFAULT_TIMEOUT_OVERRIDE: 120000
            
        steps:
          
            - name: Create tmp dir
              run: |
                  mkdir -p tmp/woocommerce
                  mkdir -p package/woocommerce

            - uses: actions/checkout@v3
              with:
                ref: ${{ env.BRANCH_NAME }}

            - name: Setup WooCommerce Monorepo
              uses: ./.github/actions/setup-woocommerce-monorepo
              with:
                  install-filters: woocommerce
                  build: false

            - name: Download and install Chromium browser.
              working-directory: plugins/woocommerce
              run: pnpm exec playwright install chromium
        
            - name: Fetch Asset ID
              id: fetch_asset_id
              uses: actions/github-script@v5
              env:
                  RELEASE_ID: ${{ github.event.inputs.release_id }}
                  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
                  REPO: ${{ github.repository }}
              with:
                  script: |
                      const script = require( '.github/workflows/scripts/fetch-asset-id.js' )
                      await script({github, context, core})
                      
            - name: Download WooCommerce release zip
              working-directory: tmp
              run: |
                  curl https://api.github.com/repos/${{ github.repository }}/releases/assets/${{ steps.fetch_asset_id.outputs.asset_id }} -LJOH 'Accept: application/octet-stream'
                  unzip woocommerce.zip -d woocommerce
                  rsync -a woocommerce/woocommerce/* ../package/woocommerce/plugins/woocommerce/

            - name: Run the rest of E2E tests.
              timeout-minutes: 60
              working-directory: plugins/woocommerce
              env:
                  E2E_MAX_FAILURES: 25
              run: pnpm exec playwright test --config=tests/e2e-pw/playwright.config.js tests/e2e-pw/tests/basic.spec.js

            - name: Generate Playwright E2E Test report.
              if: success() || failure()
              working-directory: plugins/woocommerce
              run: pnpm exec allure generate --clean ${{ env.ALLURE_RESULTS_DIR }} --output ${{ env.ALLURE_REPORT_DIR }}

            - name: Archive E2E test report
              if: success() || failure()
              uses: actions/upload-artifact@v3
              with:
                  name: ${{ env.E2E_ARTIFACT }}
                  path: |
                      ${{ env.ALLURE_RESULTS_DIR }}
                      ${{ env.ALLURE_REPORT_DIR }}
                  if-no-files-found: ignore
                  retention-days: 5
