name: Build security release zip file
on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'This workflow always runs from the security branch, and builds the branch specified here, after incorporating open PRs labeled "Ready for Build".'
        required: true

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  GIT_COMMITTER_NAME: 'WooCommerce Bot'
  GIT_COMMITTER_EMAIL: 'no-reply@woocommerce.com'
  GIT_AUTHOR_NAME: 'WooCommerce Bot'
  GIT_AUTHOR_EMAIL: 'no-reply@woocommerce.com'

jobs:
  prep:
    name: Build zip with cherry-picked PRs
    runs-on: ubuntu-20.04
    steps:
      - name: "Checkout"
        uses: actions/checkout@v3
        
      - name: "Get a list of targeted PRs"
        id: pr-list
        uses: actions/github-script@v6
        with:
          result-encoding: string
          script: |
            const PRs = await github.rest.search.issuesAndPullRequests( {
              q: 'is:pr is:open label:"Ready for Build" base:${{ github.event.inputs.branch }}'
            } );
            if ( ! PRs || ! PRs.data || ! PRs.data.items  ) {
              throw new Exception( "Could not retrieve list of PRs from API" );
            }
            const pullList = 'pulls-' + PRs.data.items.map( pr => pr.number ).join( "-" );
            console.log( '::set-output name=pull-list::%s', pullList );
            console.log( '::set-output name=branch::sec/${{ github.event.inputs.branch }}/%s', pullList );
            return PRs.data.items.map( pr => pr.html_url ).join( "\n" );
        
      - name: "Create a temp branch and cherry-pick targeted PRs"
        run: |
          git remote add upstream https://github.com/woocommerce/woocommerce.git
          git config remote.upstream.pushurl "NOT ALLOWED" # Prevents any pushes to upstream
          git fetch upstream
          git branch -D "${{ steps.pr-list.outputs.branch }}" &>/dev/null || true # if the branch already exists, delete it locally.
          git checkout -b "${{ steps.pr-list.outputs.branch }}"
          git reset --hard "upstream/${{ github.event.inputs.branch }}"
          
          PRs=($(echo '${{ steps.pr-list.outputs.result }}'))
          for PR in "${PRs[@]}"
          do
            echo "Cherry-picking $PR"
            hub am -3 "$PR"
          done
          
          # Update version in woocommerce.php... Note this only updates prereleases (beta or rc).
          perl -pi -e 's/(^ \* Version: \d+\.\d+\.\d+-(?:beta|rc).*?)$/\1-${{ steps.pr-list.outputs.pull-list }}/g' plugins/woocommerce/woocommerce.php
          
          git add plugins/woocommerce/woocommerce.php
          git commit -m "Update version in woocommerce.php" || true
          
          git push -f origin "${{ steps.pr-list.outputs.branch }}"
          
      - name: "Run build action on the temp branch"
        run: |
          curl \
            -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ secrets.SYNC_TOKEN }}" \
            -d '{"ref":"refs/heads/${{ steps.pr-list.outputs.branch }}"}' \
            https://api.github.com/repos/${{ github.repository }}/actions/workflows/build-release-zip-file.yml/dispatches

