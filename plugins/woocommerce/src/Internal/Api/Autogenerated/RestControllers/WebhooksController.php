<?php

namespace Automattic\WooCommerce\Internal\Api\Autogenerated\RestControllers;

use Automattic\WooCommerce\Api\Webhooks;
use Automattic\WooCommerce\Internal\Api\GraphQLController;
use Automattic\WooCommerce\Internal\RestApiControllerBase;
use Automattic\WooCommerce\Internal\Traits\AccessiblePrivateMethods;

/**
 * REST controller for API class Webhooks.
 */
class WebhooksController extends RestApiControllerBase {
	use AccessiblePrivateMethods;

	protected string $route_namespace = 'wc/v4/rest';

	protected function get_rest_api_namespace(): string {
		return 'rest/Webhooks';
	}

	public function register_routes() {
		register_rest_route(
			$this->route_namespace,
			'/create_webhook',
			array(
				array(
					'methods'             => \WP_REST_Server::CREATABLE,
					'description'         => __( 'Create a new webhook.', 'woocommerce' ),
					'callback'            => fn( $request ) => $this->run( $request, 'run_create_webhook' ),
					'permission_callback' => '__return_true',
					'args'                => array(
						'input'        => array(
							'description' => __( 'Data for the new webhook to be created.', 'woocommerce' ),
							'type'        => 'object',
							'context'     => array( 'view', 'edit' ),
							'readonly'    => true,
							'required'    => true,
						// TODO: Object properties.
						),
						'_fields_info' => array(
							'type'     => 'object',
							'context'  => array( 'view', 'edit' ),
							'readonly' => true,
							'required' => false,
						),
					),
				),
			),
		);

		register_rest_route(
			$this->route_namespace,
			'/webhooks',
			array(
				array(
					'methods'             => \WP_REST_Server::READABLE,
					'description'         => __( 'Get all the existing webhooks, optionally only those with the given status.', 'woocommerce' ),
					'callback'            => fn( $request ) => $this->run( $request, 'run_get_webhooks' ),
					'permission_callback' => '__return_true',
					'args'                => array(
						'status'       => array(
							'type'     => 'string',
							'context'  => array( 'view', 'edit' ),
							'readonly' => true,
							'required' => false,
						),
						'_fields_info' => array(
							'type'     => 'object',
							'context'  => array( 'view', 'edit' ),
							'readonly' => true,
							'required' => false,
						),
					),
				),
			),
		);

		register_rest_route(
			$this->route_namespace,
			'/webhook',
			array(
				array(
					'methods'             => \WP_REST_Server::READABLE,
					'description'         => __( 'Get one single webhook by id.', 'woocommerce' ),
					'callback'            => fn( $request ) => $this->run( $request, 'run_get_webhook' ),
					'permission_callback' => '__return_true',
					'args'                => array(
						'id'           => array(
							'description' => __( 'Id of the webhook to get.', 'woocommerce' ),
							'type'        => 'integer',
							'context'     => array( 'view', 'edit' ),
							'readonly'    => true,
							'required'    => true,
						),
						'_fields_info' => array(
							'type'     => 'object',
							'context'  => array( 'view', 'edit' ),
							'readonly' => true,
							'required' => false,
						),
					),
				),
			),
		);
	}

	public function run_create_webhook( \WP_REST_Request $request ) {
		return wc_get_container()->get( Webhooks::class )->create_webhook( GraphQLController::resolve_type( 'CreateWebhookInput' )->parseValue( $request['input'] ), $request['_fields_info'] );
	}

	public function run_get_webhooks( \WP_REST_Request $request ) {
		return wc_get_container()->get( Webhooks::class )->get_webhooks( $request['status'], $request['_fields_info'] );
	}

	public function run_get_webhook( \WP_REST_Request $request ) {
		return wc_get_container()->get( Webhooks::class )->get_webhook( $request['id'], $request['_fields_info'] );
	}
}

// Autogenerated file, don't modify manually!
