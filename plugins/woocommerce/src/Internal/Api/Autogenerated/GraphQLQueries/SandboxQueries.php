<?php

namespace Automattic\WooCommerce\Internal\Api\Autogenerated\GraphQLQueries;

use \Automattic\WooCommerce\Api\Sandbox;
use Automattic\WooCommerce\Internal\Api\GraphQLController;
use GraphQL\Type\Definition\ResolveInfo;
use GraphQL\Type\Definition\Type;

/**
 * GraphQL queries for the Sandbox API class.
 */
class SandboxQueries {
	public static function get_queries(): array {
		$container = wc_get_container();

		return array(
			'RandomSimpleType'      => array(
				'type'        => Type::nonNull( GraphQLController::resolve_type( 'SimpleType' ) ),
				'description' => __( 'Get an instance of SimpleType with random(ish)values.', 'woocommerce' ),
				'args'        => array(),
				'resolve'     => fn( $object_value, array $args, $context, ResolveInfo $info) => $container->get( Sandbox::class )->get_random_simple_type(),
			),
			'RandomSimpleTypes'     => array(
				'type'        => Type::nonNull( Type::listOf( Type::NonNull( GraphQLController::resolve_type( 'SimpleType' ) ) ) ),
				'description' => __( 'Get a few instances of SimpleType with random(ish)values.', 'woocommerce' ),
				'args'        => array(
					'how_many' => array(
						'description' => __( 'How many instances to get?', 'woocommerce' ),
						'type'        => Type::int(),
					),
				),
				'resolve'     => fn( $object_value, array $args, $context, ResolveInfo $info) => $container->get( Sandbox::class )->get_random_simple_types( $args['how_many'] ?? null ),
			),
			'PopulatedSimpleType'   => array(
				'type'        => Type::nonNull( GraphQLController::resolve_type( 'SimpleType' ) ),
				'description' => __( 'Get an instance of SimpleType with values populated from the input.', 'woocommerce' ),
				'args'        => array(
					'input' => array(
						'type' => Type::nonNull( GraphQLController::resolve_type( 'GetPopulatedSimpleTypeInput' ) ),
					),
				),
				'resolve'     => fn( $object_value, array $args, $context, ResolveInfo $info) => $container->get( Sandbox::class )->get_populated_simple_type( $args['input'] ),
			),
			'ComplexType'           => array(
				'type'        => Type::nonNull( GraphQLController::resolve_type( 'ComplexType' ) ),
				'description' => __( 'Get an instance of ComplexType with random(ish)values.', 'woocommerce' ),
				'args'        => array(),
				'resolve'     => fn( $object_value, array $args, $context, ResolveInfo $info) => $container->get( Sandbox::class )->get_random_complex_type( GraphQLController::get_fields_info( $info ) ),
			),
			'IdentifiableObjects'   => array(
				'type'        => Type::nonNull( Type::listOf( Type::NonNull( GraphQLController::resolve_type( 'IdentifiableObject' ) ) ) ),
				'description' => __( 'Example of query whose return type is an interface.', 'woocommerce' ),
				'args'        => array(),
				'resolve'     => fn( $object_value, array $args, $context, ResolveInfo $info) => $container->get( Sandbox::class )->get_identifiable_objects(),
			),
			'RecursiveType'         => array(
				'type'        => Type::nonNull( GraphQLController::resolve_type( 'RecursiveType' ) ),
				'description' => __( 'Demonstration of the support for recursive types.', 'woocommerce' ),
				'args'        => array(),
				'resolve'     => fn( $object_value, array $args, $context, ResolveInfo $info) => $container->get( Sandbox::class )->get_recursive_type(),
			),
			'ThrowArgumentError'    => array(
				'type'        => Type::nonNull( GraphQLController::resolve_type( 'SimpleType' ) ),
				'description' => __( 'ThrowArgumentError query type', 'woocommerce' ),
				'args'        => array(),
				'resolve'     => fn( $object_value, array $args, $context, ResolveInfo $info) => $container->get( Sandbox::class )->throw_argument_error(),
			),
			'ThrowClientAwareError' => array(
				'type'        => Type::nonNull( GraphQLController::resolve_type( 'SimpleType' ) ),
				'description' => __( 'ThrowClientAwareError query type', 'woocommerce' ),
				'args'        => array(),
				'resolve'     => fn( $object_value, array $args, $context, ResolveInfo $info) => $container->get( Sandbox::class )->throw_client_aware_error(),
			),
			'ThrowInternalError'    => array(
				'type'        => Type::nonNull( GraphQLController::resolve_type( 'SimpleType' ) ),
				'description' => __( 'ThrowInternalError query type', 'woocommerce' ),
				'args'        => array(),
				'resolve'     => fn( $object_value, array $args, $context, ResolveInfo $info) => $container->get( Sandbox::class )->throw_internal_error(),
			),
		);
	}
}

// Autogenerated file, don't modify manually!
