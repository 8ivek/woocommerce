name: 'CI'
on: 
  pull_request:
  push:
    branches:
      - 'trunk'
      - 'release/*'
concurrency:
  group: '${{ github.workflow }}-${{ github.ref }}'
  cancel-in-progress: true
jobs:
    project-matrix:
      name: 'Build Project Matrix'
      runs-on: 'ubuntu-20.04'
      outputs:
        matrix: ${{ steps.project-matrix.outputs.matrix }}
      steps:
        - uses: 'actions/checkout@v3'
          name: 'Checkout'
          with:
            fetch-depth: 0
        - uses: './.github/actions/setup-woocommerce-monorepo'
          name: 'Setup Monorepo'
          with:
            install: false
        - uses: actions/github-script@v6
          id: 'project-matrix'
          name: 'Build Matrix'
          with:
            script: |
              let baseRef = ${{ toJson( github.base_ref ) }};
              if ( baseRef ) {
                baseRef = 'origin/' + baseRef;
              }
              const buildCIMatrix = require( './.github/workflows/scripts/build-ci-matrix' );
              core.setOutput( 'matrix', JSON.stringify( await buildCIMatrix( baseRef ) ) );
    project-task-matrix:
      name: '${{ matrix.projectName }} - ${{ matrix.taskName }}'
      runs-on: 'ubuntu-20.04'
      needs: 'project-matrix'
      strategy:
        fail-fast: false
        matrix:
          include: ${{ fromJSON( needs.project-matrix.outputs.matrix ) }}
      steps:
        - uses: 'actions/checkout@v3'
          name: 'Checkout'
        - name: 'Debug'
          run: 'echo "${{ toJSON( matrix ) }}"'
        - uses: './.github/actions/setup-woocommerce-monorepo'
          id: 'setup-monorepo'
          name: 'Setup Monorepo'
          with:
            install-filters: '${{ matrix.projectName }}...'
            build-filters: '${{ matrix.projectName }}'
        - name: 'Lint'
          if: ${{ !cancelled() && matrix.runLint && steps.setup-monorepo.conclusion == 'success' }}
          run: 'pnpm --filter="${{ matrix.projectName }}" lint'
        - name: 'Prepare Test Environment'
          id: 'prepare-test-environment'
          if: ${{ matrix.needsTestEnvironment }}
          env: ${{ matrix.testEnvVars }}
          run: 'pnpm --filter="${{ matrix.projectName }}" test:env:start'
        - name: 'Test - JS'
          if: ${{ !cancelled() && matrix.runJSTests && steps.setup-monorepo.conclusion == 'success' && ( ! matrix.needsTestEnvironment || steps.prepare-test-environment.conclusion == 'success' ) }}
          run: 'pnpm --filter="${{ matrix.projectName }}" test:js'
        - name: 'Test - PHP'
          if: ${{ !cancelled() && matrix.runPHPTests && steps.setup-monorepo.conclusion == 'success' && ( ! matrix.needsTestEnvironment || steps.prepare-test-environment.conclusion == 'success' ) }}
          run: 'pnpm --filter="${{ matrix.projectName }}" test:php'
        - name: 'E2E'
          if: ${{ !cancelled() && matrix.runE2E && steps.setup-monorepo.conclusion == 'success' && ( ! matrix.needsTestEnvironment || steps.prepare-test-environment.conclusion == 'success' ) }}
          run: 'pnpm --filter="${{ matrix.projectName }}" e2e'
    project-task-matrix-evaluation:
      name: 'Evaluate Project Matrix'
      runs-on: 'ubuntu-20.04'
      needs: 'project-task-matrix'
      if: ${{ always() }}
      steps:
        - name: 'Check Matrix Success'
          run: |
            result="${{ needs.project-test-matrix.result }}"
            if [[ $result == "success" || $result == "skipped" ]]; then
              exit 0
            else
              exit 1
            fi
