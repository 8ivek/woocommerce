#!/usr/bin/env bash
. "$(dirname "$0")/_/husky.sh"

# '1' is branch
CHECKOUT_TYPE=$3
redColoured='\033[0;31m'
whiteColoured='\033[0m'

if [ "$CHECKOUT_TYPE" = '1' ]; then
	if [ -e ~/.nvm/nvm.sh ]; then
		# Auto-switch node version when switching between branches
		. ~/.nvm/nvm.sh
		nvm use --silent || nvm install
	fi

	canUpdateDependencies='no'
	currentPnpmVersion=$( command -v pnpm > /dev/null && pnpm -v )
	if [ -n "$currentPnpmVersion" ]; then
		targetPnpmVersion=$( grep packageManager package.json | sed -nr 's/.+packageManager.+pnpm@([[:digit:].]+).+/\1/p' )
		if [ "$currentPnpmVersion" != "$targetPnpmVersion" ]; then
			printf "${redColoured}pnpm version mismatch: in use '$currentPnpmVersion', needed '$targetPnpmVersion'. You can run one of those commands to install the required one:\n"
			printf "${redColoured}* via npm: 'npm install -g pnpm@$targetPnpmVersion'\n"
			printf "${redColoured}* via corepack: picks needed version automatically, see https://nodejs.org/api/corepack.html\n"
		else
			canUpdateDependencies='yes'
		fi
	fi

	# Auto-refresh dependencies when switching between branches
	changedManifests=$( ( git diff --name-only HEAD ORIG_HEAD  | grep -E '(package.json|pnpm-lock.yaml|pnpm-workspace.yaml|composer.json|composer.lock)$' ) || echo '' )
	if [ -n "$changedManifests" ]; then
		printf "${whiteColoured}It was a change in the following file(s) - refreshing dependencies:\n"
		printf "${whiteColoured}    %s\n" $changedManifests

		if [ "$canUpdateDependencies" = 'yes' ]; then
			pnpm install --frozen-lockfile
		else
			printf "${redColoured}Skipping dependencies refresh. Please actualize pnpm version and execute 'pnpm install --frozen-lockfile' manually.\n"
		fi
	fi
fi
