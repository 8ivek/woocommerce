name: 'Unit Tests'
on: 
  pull_request:
  push:
    branches:
      - 'trunk'
      - 'release/*'
concurrency:
  group: '${{ github.workflow }}-${{ github.ref }}'
  cancel-in-progress: true
jobs:
    build-test-matrices:
      name: 'Build Testing Matrices'
      runs-on: 'ubuntu-20.04'
      outputs:
        php: ${{ steps.build-test-matrices.outputs.php }}
      steps:
        - uses: 'actions/checkout@v3'
          name: 'Checkout'
          with:
            fetch-depth: 0
        - uses: './.github/actions/setup-woocommerce-monorepo'
          name: 'Setup Monorepo'
          with:
            install: 'false'
        - uses: actions/github-script@v6
          id: 'build-test-matrices'
          name: 'Build Test Matrices'
          with:
            script: |
              let baseRef = ${{ toJson( github.base_ref ) }};
              if ( baseRef ) {
                baseRef = 'origin/' + baseRef;
              }
              const buildTestMatrices = require( './.github/workflows/scripts/build-test-matrices' );
              buildTestMatrices( baseRef ).then( ( matrices ) => {
                core.setOutput( 'php', JSON.stringify( matrices.php ) );
              } );
    test-javascript:
      name: 'Tests - JavaScript'
      runs-on: 'ubuntu-20.04'
      steps:
        - uses: 'actions/checkout@v3'
          name: 'Checkout'
        - uses: './.github/actions/setup-woocommerce-monorepo'
          name: 'Setup Monorepo'
        - name: 'Run Tests'
          run: 'pnpm -r test:js'
    test-php:
      name: 'Tests - PHP - "${{ matrix.name }}"'
      runs-on: 'ubuntu-20.04'
      needs: 'build-test-matrices'
      strategy:
        matrix:
          include: ${{ fromJSON( needs.build-test-matrices.outputs.php ) }}
      steps:
        - uses: 'actions/checkout@v3'
          name: 'Checkout'
        - uses: './.github/actions/setup-woocommerce-monorepo'
          name: 'Setup Monorepo'
          with:
              install-filters: ${{ matrix.name }}
              build-filters: ${{ matrix.name }}
        - name: 'Prepare Test Environment'
          if: ${{ matrix.has-test-environment }}
          run: 'pnpm --filter=${{ matrix.name }} run test:env:start'
        - name: 'Run Tests'
          run: 'pnpm --filter=${{ matrix.name }} test:php ${{ matrix.test-args }}'
