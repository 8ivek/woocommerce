<?php

namespace Automattic\WooCommerce\Internal\Api\Autogenerated\GraphQLTypes;

use Automattic\WooCommerce\Internal\Api\GraphQLController;
use GraphQL\Type\Definition\Type;

/**
 * GraphQL type for the WebhookDefinition interface class.
 */
class WebhookDefinitionType extends \GraphQL\Type\Definition\InterfaceType {
	public function __construct() {
		$config = array(
			'name'        => 'WebhookDefinition',
			'description' => __( 'Represents the static webhook details.', 'woocommerce' ),
			'fields'      => $this->get_fields(),
			'resolveType' => function ( $value ) {
				return GraphQLController::resolve_type( get_class( $value ) );
			},
		);

		parent::__construct( $config );
	}

	public function get_fields() {
		return array(
			'name'         => fn() => array(
				'type'        => Type::nonNull( Type::string() ),
				'description' => __( 'Display name of the webhook.', 'woocommerce' ),
			),
			'topic'        => fn() => array(
				'type'        => Type::nonNull( Type::string() ),
				'description' => __( 'The topic of the webhook.', 'woocommerce' ),
			),
			'delivery_url' => fn() => array(
				'type'        => Type::nonNull( Type::string() ),
				'description' => __( 'The URL where the webhook payload will be delivered.', 'woocommerce' ),
			),
			'secret'       => fn() => array(
				'type'        => Type::nonNull( Type::string() ),
				'description' => __( 'Optional secret to be delivered as part of the webhook payload.', 'woocommerce' ),
			),
			'api_version'  => fn() => array(
				'type'        => Type::nonNull( GraphQLController::resolve_type( 'WebhookApiType' ) ),
				'description' => __( 'WooCommerce API version that will be used to compose the webhook payload.', 'woocommerce' ),
			),
		);
	}
}

// Autogenerated file, don't modify manually!
